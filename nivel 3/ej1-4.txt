1 - SQL: seleccionar todos los usuarios mayores de 18.

SELECT * FROM usuarios where edad > 18

2 - SQL: traer posts con su autor (JOIN).

SELECT p.*, u.*
FROM posts p
JOIN usuarios u ON p.usuario_id = u.id;


3 - SQL: contar cu√°ntos posts tiene cada usuario (GROUP BY).

SELECT u.id, u.nombre, COUNT(p.id) AS total_posts
FROM usuarios u
LEFT JOIN posts p ON p.usuario_id = u.id
GROUP BY u.id, u.nombre;

üëâ Uso LEFT JOIN para que tambi√©n salgan usuarios con 0 posts.
Si us√°s INNER JOIN, se listan solo los que tienen al menos 1 post.

4 - SQL: obtener el √∫ltimo usuario registrado (ORDER BY + LIMIT).

SELECT * 
FROM usuarios
ORDER BY fecha_creacion DESC
LIMIT 1;

Ten√©s que ordenar en orden descendente (DESC) por la columna de fecha, y quedarte con el primero.


----- extras -----
- Usuarios con email en Gmail

SELECT * 
FROM usuarios
WHERE email LIKE '%@gmail.com';

- Top 3 usuarios con m√°s posts

SELECT u.id, u.nombre, COUNT(p.id) AS total_posts
FROM usuarios u
JOIN posts p ON p.usuario_id = u.id
GROUP BY u.id, u.nombre
ORDER BY total_posts DESC
LIMIT 3;

- Cantidad total de posts por categor√≠a

SELECT c.nombre, COUNT(p.id) AS total_posts
FROM categorias c
LEFT JOIN posts p ON p.categoria_id = c.id
GROUP BY c.id, c.nombre;

- Obtener todos los posts creados en 2024

SELECT *
FROM posts
WHERE YEAR(fecha_creacion) = 2024;

- Traer los usuarios que no tienen posts

SELECT u.id, u.nombre
FROM usuarios u
LEFT JOIN posts p ON p.usuario_id = u.id
WHERE p.id IS NULL;
